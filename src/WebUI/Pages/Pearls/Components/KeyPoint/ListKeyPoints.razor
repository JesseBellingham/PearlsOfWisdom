@using PearlsOfWisdom.WebUI.Clients
@implements IDisposable
@inject KeyPointsListStateContainer StateContainer;
@inject IKeyPointClient _client;

<p>Key points:</p>
<ul class="list-group">
    @foreach (var point in Items)
    {
        <li class="list-group-item">@point.Text</li>
    }
    <li class="list-group-item"><NewKeyPoint PearlId="@PearlId" /></li>
</ul>

@code
{
    
    [Parameter]
    public Guid PearlId { get; set; }

    [Parameter]
    public IList<KeyPointVm> Items { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        StateContainer.OnStateChanged += OnStateContainerChanged;
        await GetKeyPoints();
        await base.OnInitializedAsync();
    }

    private async Task GetKeyPoints()
    {
        Items = await _client.GetAsync(PearlId);
    }
    
    private async Task OnStateContainerChanged()
    {
        await GetKeyPoints();
        await InvokeAsync(StateHasChanged);
    }
    
    public void Dispose()
    {
        StateContainer.OnStateChanged -= OnStateContainerChanged;
    }
}
