@using PearlsOfWisdom.WebUI.Clients
@implements IDisposable
@inject IPearlsListClient _client;
@inject ComponentState _state;

<h1>Pearls</h1>

@* <NavLink class="nav-link btn btn-default" href="newcontact">Add New Contact</NavLink> *@

<hr />

@if (_model == null)
{
  <p>Loading...</p>
}
else if (_model.Lists.Any())
{
  @foreach (PearlListDto list in _model.Lists)
  {
    <div class="container-fluid">
      <h3>@list.Title</h3>
      <NewPearl ListId="@list.Id" />
      @foreach (PearlItemDto item in list.Items)
      {
        <ListItem Model="@item"/>
      }
    </div>
  }
}

@code {

  private PearlListsVm _model;
  protected override async Task OnInitializedAsync()
  {
    _state.OnStateChanged += OnStateChanged;
    await GetPearls();
    await base.OnInitializedAsync();
  }

  private async Task OnStateChanged()
  {
    await GetPearls();
    await InvokeAsync(StateHasChanged);
  }

  private async Task GetPearls()
  {
     _model = await _client.GetAsync();
  }

  public void Dispose()
  {
    _state.OnStateChanged -= OnStateChanged;
  }
}